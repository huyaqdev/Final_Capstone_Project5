Description: >
  CAPSTONE - HuyAQ
  AWS EKS Nodegroup infrastructure

Parameters:
  EnvironmentName:
    Description: Prefixed Env resource names
    Type: String

  MinSize:
    Description: Min Application's Servers
    Type: Number

  MaxSize:
    Description: Max scale Application's Servers
    Type: Number

  DesiredSize:
    Description: Instance amount
    Type: Number

  KeyPair:
    Description: EC2 key pair
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  ServiceEP:
    aws-cn:
      ec2: ec2.amazonaws.com.cn
    aws-us-gov:
      ec2: ec2.amazonaws.com
    aws:
      ec2: ec2.amazonaws.com

Resources:
  NodeGrRoles:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub ${EnvironmentName}-Nodegroup-Roles
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !FindInMap [ServiceEP, !Ref "AWS::Partition", ec2]
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy"
      Path: /

  NodeGroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName: !Sub ${EnvironmentName}-Cluster
      NodeRole: !GetAtt NodeGrRoles.Arn
      NodegroupName: !Sub ${EnvironmentName}-NodeGr
      ScalingConfig:
        MinSize: !Ref MinSize
        MaxSize: !Ref MaxSize
        DesiredSize: !Ref DesiredSize
      Subnets: 
        Fn::Split: 
          - ","
          - Fn::ImportValue: !Sub ${EnvironmentName}-PUB-NETS

Outputs:
  NodeGrRoles:
    Description: Node Group instanc roles
    Value: !GetAtt NodeGrRoles.Arn
    Export:
      Name: !Sub ${EnvironmentName}-NodeGrRoles

  NodeGroup:
    Description: EKS Node Group
    Value: !Ref NodeGroup
    Export:
      Name: !Sub ${EnvironmentName}-NodeGr